[tool.black]
line-length=79
target-version=["py38"]

[tool.isort]
line_length = 79
use_parentheses = true
balanced_wrapping = true
include_trailing_comma = true
multi_line_output = 3
known_third_party=["pytest", "yarl", "aiohttp", "aioredis", "envparse"]
known_first_party=["aiohttp_cache"]

[tool.coverage.run]
branch = true
source = ["server-example"]

[tool.coverage.paths]
source = ["server-example"]

[tool.coverage.report]
fail_under = 70 # TODO should be 95%
skip_covered = true
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0.0"
addopts = "-vv -s --cov --no-cov-on-fail --tb=native"
testpaths = "tests/"
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "| %(asctime)s | %(name)s | %(levelname)s | %(filename)s | %(message)s"
python_files = [
    "test_*.py",
    "unit_test_*.py",
    "component_test_*.py",
]

[tool.poetry]
name = "nginx-custom-headers"
authors = ["Artem Zhukov"]
description = "Example of catching a custom header on backend"
version = "1.0"
license = "BSD"

[tool.poetry.dependencies]
python = "^3.8"
aiohttp = "^3.6"
envparse = "^0.2.0"
aioredis = "^1.3"


[tool.poetry.dev-dependencies]
coverage = {extras = ["toml"], version = "^5.0.3"}
pytest = "^6.0.0"

pytest-aiohttp = "^0.3.0"
pytest-cov = "^2.8"


[build-system]
requires = ["poetry>=1.0.0."]
build-backend = "poetry.masonry.api"
